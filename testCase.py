import FFNN
import numpy as np

data1 = np.array([
    [175, 70, 80, 10, 0],
    [180, 68, 75, 9.8, 0],
    [170, 60, 55, 11.5, 1],
    [165, 58, 50, 11.8, 1],
    [190, 100, 150, 15, 2],
    [185, 95, 140, 14.8, 2],
    [172, 65, 70, 10.5, 0],
    [167, 62, 60, 12, 1],
    [195, 110, 180, 16, 2],
    [178, 73, 85, 10.2, 0],
    [162, 55, 50, 12.5, 1],
    [188, 102, 155, 14.9, 2],
    [174, 67, 78, 10.1, 0],
    [169, 61, 65, 11.7, 1],
    [191, 105, 160, 15.5, 2],
    [176, 69, 82, 10.3, 0],
    [164, 59, 53, 11.9, 1],
    [187, 98, 145, 14.6, 2],
    [173, 66, 75, 10.4, 0],
    [168, 63, 62, 12.2, 1],
    [193, 108, 170, 15.8, 2],
    [177, 71, 87, 10, 0],
    [161, 54, 48, 12.7, 1],
    [189, 103, 152, 15.1, 2],
    [175, 68, 80, 10.2, 0],
    [166, 60, 58, 11.6, 1],
    [190, 107, 165, 15.3, 2],
    [179, 74, 90, 9.9, 0],
    [163, 56, 51, 12.3, 1],
    [185, 100, 148, 14.7, 2],
    [174, 67, 77, 10.4, 0],
    [169, 61, 63, 11.8, 1],
    [192, 109, 172, 15.7, 2],
    [178, 72, 85, 10.1, 0],
    [162, 55, 49, 12.6, 1],
    [188, 104, 158, 14.9, 2],
    [176, 69, 79, 10.3, 0],
    [165, 59, 54, 11.9, 1],
    [190, 106, 162, 15.4, 2],
    [180, 75, 92, 9.8, 0],
    [161, 53, 47, 12.8, 1],
    [187, 102, 150, 14.8, 2],
    [173, 66, 76, 10.5, 0],
    [168, 62, 60, 11.7, 1],
    [194, 111, 175, 16, 2],
    [177, 70, 84, 10.2, 0],
    [164, 57, 52, 12.4, 1],
    [189, 105, 160, 15, 2],
    [175, 69, 81, 10.3, 0],
    [167, 60, 59, 11.5, 1],
    [191, 108, 168, 15.6, 2],
    [179, 73, 88, 10, 0],
    [162, 54, 50, 12.5, 1],
    [186, 101, 149, 14.7, 2],
    [174, 67, 78, 10.4, 0],
    [169, 63, 64, 11.6, 1],
    [193, 110, 170, 15.8, 2],
    [178, 71, 83, 10.1, 0],
    [163, 56, 53, 12.3, 1],
    [188, 103, 155, 15, 2],
    [176, 68, 80, 10.2, 0],
    [165, 58, 55, 11.9, 1],
    [190, 107, 165, 15.5, 2],
    [180, 74, 91, 9.9, 0],
    [161, 55, 49, 12.7, 1],
    [187, 102, 152, 14.8, 2],
    [173, 67, 75, 10.3, 0],
    [168, 61, 61, 11.7, 1],
    [194, 109, 178, 16.2, 2],
    [177, 70, 86, 10, 0],
    [164, 56, 51, 12.4, 1],
    [189, 106, 160, 15.3, 2],
    [175, 68, 79, 10.1, 0],
    [166, 59, 57, 11.8, 1],
    [191, 111, 170, 15.7, 2],
    [179, 72, 89, 9.8, 0],
    [162, 54, 48, 12.6, 1],
    [185, 100, 147, 14.6, 2],
    [174, 66, 77, 10.4, 0],
    [169, 62, 63, 11.9, 1],
    [192, 108, 171, 15.9, 2],
    [178, 70, 82, 10.2, 0],
    [163, 55, 52, 12.3, 1],
    [188, 105, 156, 15, 2],
    [176, 69, 81, 10.3, 0],
    [165, 60, 56, 11.7, 1],
    [190, 107, 164, 15.4, 2],
    [181, 75, 93, 9.7, 0],
    [161, 53, 47, 12.9, 1],
    [187, 101, 150, 14.7, 2],
    [173, 66, 75, 10.5, 0],
    [168, 62, 60, 11.8, 1],
    [193, 110, 172, 15.8, 2],
    [177, 71, 85, 10, 0],
    [164, 57, 50, 12.4, 1],
    [189, 104, 158, 15.2, 2],
    [175, 68, 80, 10.3, 0],
    [166, 59, 58, 11.6, 1],
    [191, 109, 167, 15.6, 2],
    [179, 73, 87, 9.9, 0],
    [162, 55, 51, 12.5, 1],
    [186, 102, 148, 14.9, 2],
    [174, 67, 78, 10.1, 0],
    [169, 61, 63, 11.7, 1],
    [194, 111, 176, 16.1, 2],
    [178, 70, 84, 10.2, 0],
    [163, 56, 53, 12.3, 1],
    [188, 105, 154, 15.1, 2],
    [176, 68, 80, 10.4, 0],
    [165, 58, 55, 11.9, 1],
    [190, 108, 166, 15.5, 2],
])


"""
Dataset Explanation:

This variable `data` is a list of records where each record represents a patient's medical and demographic information along with their prescribed drug category.

Each record is a list with the following attributes in order:

1. Age (integer) - Patient's age in years.
2. Sex (integer) - Patient's sex, encoded as 0 for female and 1 for male.
3. BP (Blood Pressure) (integer) - Encoded blood pressure level:
    0 = low
    1 = normal
    2 = high
4. Cholesterol (integer) - Encoded cholesterol level:
    0 = normal
    1 = high
5. Na_to_K (float) - The sodium to potassium ratio in the patient's blood.
6. Drug (integer) - The drug category prescribed to the patient, encoded as integers (e.g., 0 = Drug X, 1 = Drug Y, 2 = Drug Z).

This dataset can be used to train or test a classification algorithm to predict the drug category based on patient features.
"""

data = np.array([
    [23, 1, 2, 1, 25.355, 1],
    [47, 0, 0, 1, 13.093, 2],
    [47, 0, 0, 1, 10.114, 2],
    [28, 1, 1, 1, 7.798, 0],
    [61, 1, 0, 1, 18.043, 1],
    [22, 1, 0, 0, 8.607, 0],
    [49, 1, 1, 0, 16.275, 1],
    [41, 0, 0, 0, 11.037, 0],
    [60, 0, 1, 1, 15.171, 1],
    [43, 1, 0, 0, 19.368, 1],
    [47, 0, 0, 1, 11.767, 2],
    [34, 1, 2, 0, 19.199, 1],
    [43, 0, 1, 0, 15.376, 1],
    [74, 1, 2, 0, 20.942, 1],
    [50, 1, 1, 0, 12.703, 0],
    [16, 1, 2, 1, 22.818, 1],
    [69, 0, 1, 1, 15.516, 1],
    [43, 0, 0, 0, 9.171, 2],
    [23, 0, 0, 1, 13.769, 2],
    [32, 1, 2, 0, 19.199, 1],
    [57, 0, 0, 1, 9.514, 2],
    [63, 0, 1, 0, 10.672, 2],
    [47, 0, 0, 1, 6.683, 0],
    [48, 1, 0, 1, 10.342, 2],
    [33, 1, 0, 0, 18.924, 1],
    [28, 1, 2, 0, 19.199, 1],
    [52, 0, 1, 1, 32.922, 1],
    [25, 1, 2, 0, 10.391, 1],
    [49, 0, 0, 0, 13.092, 2],
    [41, 0, 0, 1, 18.703, 1],
    [60, 0, 2, 0, 24.276, 1],
    [43, 1, 1, 0, 25.467, 1],
    [34, 1, 2, 1, 20.909, 1]
])

hd1 = 8
hd2 = 6
lr = 0.01
bs = 2
e = 100

nn = FFNN.Machine(data, hd1, hd2, lr, bs, e)

print("Predicted Class for Drug X Sample:", nn.predict(np.array([20, 0, 2, 1, 7.298])))
print("Predicted Class for Drug Y Sample:", nn.predict(np.array([50, 0, 1, 0, 25.974])))
print("Predicted Class for Drug Z Sample:", nn.predict(np.array([47, 1, 0, 0, 10.073])))
